package main

import "fmt"

/*
	Что выведет программа?
	Объяснить порядок выполнения defer функций и итоговый вывод.

	Функция test вернёт 2, потому что она использует именованную возвращаемую переменную `x`.
	При вызове `return` сначала устанавливается возвращаемое значение (x = 1),
	затем выполняется отложенная функция `defer`, которая увеличивает `x` на 1.
	Таким образом, фактически возвращается 2.

	Функция anotherTest вернёт 1, потому что она возвращает значение переменной `x`,
	которое копируется при выполнении оператора `return x`.
	Отложенная функция срабатывает уже после копирования возвращаемого значения,
	и её изменения влияют только на локальную переменную `x`, но не на то, что будет возвращено.
*/

func test() (x int) {
	defer func() {
		x++
	}()
	x = 1
	return
}

func anotherTest() int {
	var x int
	defer func() {
		x++
	}()
	x = 1
	return x
}

func main() {
	fmt.Println(test())
	fmt.Println(anotherTest())
}
